# I will use this file to create the infrastructure for the project via Portainer on the server
# ---
version: "3"

volumes:
  node_modules:
    driver: local
networks:
  payload_vlan:
    driver: bridge
  website_vlan:
    driver: bridge

services:
  website:
    image: lanzoninicola/dionimara-website:latest
    container_name: website
    hostname: website
    #restart: always
    depends_on:
      - payload
    networks:
      - website_vlan
    command: "npm start"
    working_dir: /myapp
    environment:
      - ./frontend/.env
    # expose is a metadata, it has no effect on the container
    expose:
      - "3000"
    #ports:
    #  - "80:3000"

  payload:
    image: lanzoninicola/dionimara-payload:latest
    container_name: payload
    networks:
      - payload_vlan
    expose:
      - "3000"
    ports:
      - "3000:3000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "yarn install && yarn dev"
    # environment:
    #   MONGODB_URI: mongodb+srv://mongo:5B94088E166EB558A70B8419B8B29DC4@cluster0.hiasuou.mongodb.net/?retryWrites=true&w=majority
    #   PORT: 3000
    #   NODE_ENV: production
    #   PAYLOAD_SECRET: 5AF468B29DAC5E3CA00B41B7B00F2895A4E20D94EAD2DE7E8694B2E7B5BA7C0A
    environment:
      - ./backend/.env

  traefik:
    image: lanzoninicola/dionimara-proxy:latest
    container_name: "traefik"
    networks:
      - payload_vlan
      - website_vlan
    ports:
      - "80:80"
      - "443:443"
      # (Optional) Expose Dashboard
      - "8080:8080" # Don't do this in production!
    volumes:
      - /etc/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
